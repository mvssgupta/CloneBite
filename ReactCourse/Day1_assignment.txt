1)What is Emmet?
Ans)
Emmet is a plugin for text editors that allows you to write HTML and CSS code faster and more efficiently. It uses abbreviations that can be expanded into HTML and CSS code snippets, and provides many helpful features such as automatic tag closing, attribute grouping, and code formatting.

For example, you can use the abbreviation ul>li*2 to generate an unordered list with five list items:

<ul>
  <li></li>
  <li></li>
</ul>

Emmet is available for many popular text editors, including Sublime Text, Visual Studio Code, and Atom. It can save you a lot of time and effort when writing HTML and CSS code, and is a valuable tool for web developers and designers.

2)Difference between a Library and Framework?
Ans)
A library is like a toolbox that you can use to fix different things around your house. It has a variety of tools, each of which can be used for a specific task. For example, you might have a hammer for driving nails, a screwdriver for turning screws, and a saw for cutting wood. You can use any of these tools on their own, or in combination with other tools, to fix different things around your house.

A framework, on the other hand, is like a set of blueprints for building a house. It provides a detailed plan for how all the different parts of the house should fit together, and includes all the necessary tools and materials you need to build it. You can't just use one part of the framework on its own - you have to follow the entire plan to build the house. However, once you have followed the plan and built the house, you have a solid structure that you can then customize and decorate to your liking.

So, to summarize, a library is a collection of tools that you can use in a flexible way to perform specific tasks, whereas a framework is a more comprehensive set of tools and conventions that you can use to build a larger structure, such as an application.



3)What is CDN? Why do we use it?
Ans)
A CDN, or Content Delivery Network, is a distributed network of servers that are used to deliver content more efficiently to users. CDNs are commonly used to deliver static content such as images, JavaScript and CSS files, and videos, as well as dynamic content such as HTML pages and API responses.

CDNs work by replicating content across a network of servers that are located in different geographic locations. When a user requests content from a CDN, the CDN determines which server is the closest to the user's location and delivers the content from that server. This can significantly improve the performance and speed of your website or application, as the content is delivered from a location that is closer to the user, reducing the distance that the data has to travel.

There are several reasons why you might use a CDN:

To improve the performance and speed of your website or application. By delivering content from a server that is closer to the user, you can reduce the amount of time it takes for the content to be delivered, resulting in a faster and more responsive user experience.

To reduce the load on your server. By delivering content from a CDN, you can offload some of the work that your server would otherwise have to do, which can help to improve its performance and scalability.

To improve the availability of your content. CDNs typically have multiple servers in different locations, which can help to ensure that your content is always available, even if one of the servers goes down.

To protect your content. CDNs often include features such as DDoS protection and web application firewalls to help protect your content from various types of attacks.

Overall, CDNs are an important tool for improving the performance, scalability, and security of your website or application.



4)Why is React known as React ?
Ans)
It is known as React because it was designed to help developers build reusable components that can be easily rendered and updated in response to changes in data.

The name "React" is short for "reactive", which refers to the way that React components automatically update and re-render in response to changes in data. When data changes, React updates the appropriate components to reflect those changes, without the need for developers to manually update the user interface.

React is known for its performance and efficiency, as it only updates the specific components that need to be changed, rather than re-rendering the entire user interface. This makes it well-suited for building large and complex applications where data is constantly changing.

Overall, the name "React" reflects the library's focus on building reusable components that can efficiently update and re-render in response to changes in data.



7) What is difference between react.development.js and react.production.js files via CDN?
Ans)

react.development.js and react.production.js are two versions of the React library that are available for loading via CDN (Content Delivery Network). Both versions contain the same core functionality, but they are optimized for different environments.

react.development.js is the development version of the React library. It is optimized for debugging and includes additional features such as error checking and warning messages that can help you identify and fix issues in your code. This version is intended to be used during the development and testing of your application.

react.production.js is the production version of the React library. It is optimized for performance and does not include the debugging and error-checking features of the development version. This version is intended to be used when deploying your application to a live production environment.

In general, you should use react.development.js during the development and testing of your application, and switch to react.production.js when you are ready to deploy your application to a live production environment. This will help ensure that your application is as efficient and performant as possible in a production environment.


8)What is async and defer?
Ans)
The async and defer attributes are used to specify the loading behavior of external scripts in HTML.

The async attribute tells the browser to download the script asynchronously, which means that it will not block other elements on the page from loading while the script is being fetched. This can improve the performance of a webpage by allowing the browser to download the script in parallel with other resources. However, the script may execute at any time and may not necessarily execute in the order in which it appears in the HTML.

The defer attribute tells the browser to download the script and hold it in a queue until the page has finished parsing. This ensures that the script will not execute until after the page has been fully loaded, and it also guarantees that the script will execute in the order in which it appears in the HTML.

Both the async and defer attributes can be useful in optimizing the loading of scripts on a webpage, depending on the specific needs and requirements of the page.                                                                                                                                                                                                                                                                    